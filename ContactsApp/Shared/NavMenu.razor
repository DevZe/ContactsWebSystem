@using Blazored.SessionStorage
@inject AuthenticationStateProvider authStateProvider
@inject IAuthenticationService _authEndpoint


    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
        <a class="navbar-brand" href="/contacts-manager">Contacts App</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>
     <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> LogOut
                </NavLink>
            </div>

        </nav>
    </div>
    


   


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    bool IsLoggedIn;
    private AuthenticationState? state;



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (state == null)
        {
            state = await authStateProvider.GetAuthenticationStateAsync();
           

            if (state != null && state.User.Identity.IsAuthenticated)
            {
                StateHasChanged();
                IsLoggedIn = true;
            }
        }
        else
        {
            IsLoggedIn = true;
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    List<string> Errors = new List<string>();

    async Task logOut()
    {
        try
        {
            //await _sessionStorage.RemoveItemAsync("token");
            await _authEndpoint.LogOut();
        }
        catch (Exception ex)
        {
            Errors.Add("Opps! Could not log you out");
            Errors.Add($"System Eror: {ex.Message}");
        }
    }
}
